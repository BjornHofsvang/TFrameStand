// CodeGear C++Builder
// Copyright (c) 1995, 2017 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'FrameStand.pas' rev: 33.00 (Windows)

#ifndef FramestandHPP
#define FramestandHPP

#pragma delphiheader begin
#pragma option push
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member 
#pragma pack(push,8)
#include <System.hpp>
#include <SysInit.hpp>
#include <System.Classes.hpp>
#include <System.SysUtils.hpp>
#include <FMX.Types.hpp>
#include <FMX.Controls.hpp>
#include <FMX.Forms.hpp>
#include <SubjectStand.hpp>

//-- user supplied -----------------------------------------------------------

namespace Framestand
{
//-- forward type declarations -----------------------------------------------
template<typename T> class DELPHICLASS TFrameInfo__1;
class DELPHICLASS TFrameStand;
//-- type declarations -------------------------------------------------------
#pragma pack(push,4)
// Template declaration generated by Delphi parameterized types is
// used only for accessing Delphi variables and fields.
// Don't instantiate with new type parameters in user code.
template<typename T> class PASCALIMPLEMENTATION TFrameInfo__1 : public Subjectstand::TSubjectInfo
{
	typedef Subjectstand::TSubjectInfo inherited;
	
public:
	/* TSubjectInfo.Create */ inline __fastcall virtual TFrameInfo__1(Subjectstand::TSubjectStand* const ASubjectStand, Fmx::Forms::TFrame* const ASubject, Fmx::Types::TFmxObject* const AParent, const System::UnicodeString AStandStyleName) : Subjectstand::TSubjectInfo(ASubjectStand, ASubject, AParent, AStandStyleName) { }
	/* TSubjectInfo.Destroy */ inline __fastcall virtual ~TFrameInfo__1() { }
	
};

#pragma pack(pop)

class PASCALIMPLEMENTATION TFrameStand : public Subjectstand::TSubjectStand
{
	typedef Subjectstand::TSubjectStand inherited;
	
public:
	template<typename T> HIDESBASE TFrameInfo__1<T>* __fastcall Use(const T AFrame, Fmx::Types::TFmxObject* const AParent = (Fmx::Types::TFmxObject*)(0x0), const System::UnicodeString AStandStyleName = System::UnicodeString())/* overload */;
	template<typename T> HIDESBASE TFrameInfo__1<T>* __fastcall New(Fmx::Types::TFmxObject* const AParent = (Fmx::Types::TFmxObject*)(0x0), const System::UnicodeString AStandStyleName = System::UnicodeString())/* overload */;
public:
	/* TSubjectStand.Create */ inline __fastcall virtual TFrameStand(System::Classes::TComponent* AOwner) : Subjectstand::TSubjectStand(AOwner) { }
	/* TSubjectStand.Destroy */ inline __fastcall virtual ~TFrameStand() { }
	
	/* Hoisted overloads: */
	
public:
	inline Subjectstand::TSubjectInfo* __fastcall  Use(Fmx::Forms::TFrame* const ASubject, Fmx::Types::TFmxObject* const AParent = (Fmx::Types::TFmxObject*)(0x0), const System::UnicodeString AStandStyleName = System::UnicodeString()){ return Subjectstand::TSubjectStand::Use(ASubject, AParent, AStandStyleName); }
	inline Subjectstand::TSubjectInfo* __fastcall  New(const Subjectstand::TSubjectClass ASubjectClass, Fmx::Types::TFmxObject* const AParent = (Fmx::Types::TFmxObject*)(0x0), const System::UnicodeString AStandStyleName = System::UnicodeString()){ return Subjectstand::TSubjectStand::New(ASubjectClass, AParent, AStandStyleName); }
	
};


//-- var, const, procedure ---------------------------------------------------
}	/* namespace Framestand */
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE) && !defined(NO_USING_NAMESPACE_FRAMESTAND)
using namespace Framestand;
#endif
#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// FramestandHPP
